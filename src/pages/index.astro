---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import Hero from "../components/Hero.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";

// Page section components
import Me from "../../public/assets/backgrounds/me.png";
import ArticleTags from "../components/ArticleTags";
import ResearchPreview from "../components/ResearchPreview.astro";

// Content Fetching: List four most recent work projects
const articles = (await getCollection("articles"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 4);


const projects = (await getCollection("projects"))
  .sort(
    (a: any, b: any) =>
      (new Date(b.data.publishDate) as any) -
      (new Date(a.data.publishDate) as any)
  )
  .slice(0, 4);

const researches = (await getCollection("researches"))
  .sort(
    (a: any, b: any) =>
      (new Date(b.data.publishDate) as any) -
      (new Date(a.data.publishDate) as any)
  )
  .slice(0, 4);


// 文章总数
const articleCount = (await getCollection("articles")).length;

// 项目总数
const projectCount = (await getCollection("projects")).length;

// 研究总数
const researchCount = (await getCollection("researches")).length;

let articleTags = (await getCollection("articles"))
  .map((article) => article.data.tags)
  .flat();

// Remove duplicate tags
articleTags = [...new Set(articleTags)];

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<BaseLayout>
  <div class="stack gap-20 lg:gap-48" style="margin-bottom:7rem !important;">
    <div class="wrapper stack gap-8 lg:gap-20">
      <header class="hero">
        <Hero
          title="Hello, my name is Tristen Y 🧑🏻‍💻"
          tagline="Fake It, Until You Make It"
          align="start"
        >
        </Hero>
        <Image
          src={Me}
          alt="Licodeao's photo"
          width="450"
          height="450"
          class="avatar"
        />
      </header>
      
      {
        articleTags.length > 0 && <ArticleTags tags={articleTags}></ArticleTags>
      }
      
    </div>
    <main class="with-background bg-variant wrapper">
      <header class="mb-14 text-center md:mb-20">
        <h3>Recent Researches</h3>
      </header>
      <div class="outputContainer px-5">
        {researches.map((research) => (
          <ResearchPreview researches={research}/>
        ))}
      </div>
    </main>

    {articles.length > 0 && (
      <main class="with-background bg-variant wrapper">
      <header class="mb-14 text-center md:mb-20">
        <h3>Recent Articles</h3>
      </header>
      <div class="outputContainer px-5">
        {articles.map((article) => (
          <PortfolioPreview articles={article}/>
        ))}
      </div>
    </main>
    )}
  </div>
</BaseLayout>

<style>
  .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }

  @media(min-width:50em) {
    .hero {
      display: grid;
      grid-template-columns: 6fr 4fr;
      padding-inline: 2.5rem;
      gap: 0.5rem;
    }

    .roles {
      margin-top: 0.5rem;
      display: flex;
      gap: 0.5rem;
    }
  }

  @media (min-width: 65em) {
    .hero {
      display: grid;
      grid-template-columns: 6fr 4fr;
      padding-inline: 2.5rem;
      gap: 3.75rem;
      font-size: var(--text-5xl);
    }

    .roles {
      margin-top: 0.5rem;
      display: flex;
      gap: 0.5rem;
    }
  }


  

  

   
  /* ====================================================== */

  .section {
    display: grid;
    gap: 2rem;
  }

  .with-background {
    position: relative;
  }

  .with-background::before {
    --hero-bg: var(--bg-image-subtle-2);

    content: "";
    position: absolute;
    pointer-events: none;
    left: 50%;
    width: 100vw;
    aspect-ratio: calc(2.25 / var(--bg-scale));
    top: 0;
    transform: translateY(-75%) translateX(-50%);
    background:
      url("/assets/backgrounds/noise.png") top center/220px repeat,
      var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
      var(--gray-999);
    background-blend-mode: overlay, normal, normal, normal;
    mix-blend-mode: var(--bg-blend-mode);
    z-index: -1;
  }

  .with-background.bg-variant::before {
    --hero-bg: var(--bg-image-subtle-1);
  }

  .section-header {
    justify-self: center;
    text-align: center;
    max-width: 50ch;
    font-size: var(--text-md);
    color: var(--gray-300);
  }

  .section-header h3 {
    font-size: var(--text-2xl);
  }

  @media (min-width: 50em) {
    .section {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas: "header header header header" "gallery gallery gallery gallery";
      gap: 5rem;
    }

    .section.with-cta {
      grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
    }

    .section-header {
      grid-area: header;
      font-size: var(--text-lg);
    }

    .section-header h3 {
      font-size: var(--text-3xl);
    }

    .with-cta .section-header {
      justify-self: flex-start;
      text-align: left;
    }

    .gallery {
      grid-area: gallery;
    }

    .cta {
      grid-area: cta;
    }
  }

  /* ====================================================== */

  .mention-card {
    display: flex;
    height: 7rem;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid var(--gray-800);
    border-radius: 1.5rem;
    color: var(--gray-300);
    background: var(--gradient-subtle);
    box-shadow: var(--shadow-sm);
  }


  .outputContainer {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }


  @media (min-width: 50em) {
    .mention-card {
      border-radius: 1.5rem;
      height: 9.5rem;
    }
  }


  
</style>
